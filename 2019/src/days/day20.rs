pub fn part1(_contents: &str) -> usize {
    return 0;
}

pub fn part2(_contents: &str) -> usize {
    return 0;
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_part1() {
        let cases = vec![
            (
                vec![
                    "         A           ",
                    "         A           ",
                    "  #######.#########  ",
                    "  #######.........#  ",
                    "  #######.#######.#  ",
                    "  #######.#######.#  ",
                    "  #######.#######.#  ",
                    "  #####  B    ###.#  ",
                    "BC...##  C    ###.#  ",
                    "  ##.##       ###.#  ",
                    "  ##...DE  F  ###.#  ",
                    "  #####    G  ###.#  ",
                    "  #########.#####.#  ",
                    "DE..#######...###.#  ",
                    "  #.#########.###.#  ",
                    "FG..#########.....#  ",
                    "  ###########.#####  ",
                    "             Z       ",
                    "             Z       ",
                ],
                23,
            ),
            (
                vec![
                    "                   A               ",
                    "                   A               ",
                    "  #################.#############  ",
                    "  #.#...#...................#.#.#  ",
                    "  #.#.#.###.###.###.#########.#.#  ",
                    "  #.#.#.......#...#.....#.#.#...#  ",
                    "  #.#########.###.#####.#.#.###.#  ",
                    "  #.............#.#.....#.......#  ",
                    "  ###.###########.###.#####.#.#.#  ",
                    "  #.....#        A   C    #.#.#.#  ",
                    "  #######        S   P    #####.#  ",
                    "  #.#...#                 #......VT",
                    "  #.#.#.#                 #.#####  ",
                    "  #...#.#               YN....#.#  ",
                    "  #.###.#                 #####.#  ",
                    "DI....#.#                 #.....#  ",
                    "  #####.#                 #.###.#  ",
                    "ZZ......#               QG....#..AS",
                    "  ###.###                 #######  ",
                    "JO..#.#.#                 #.....#  ",
                    "  #.#.#.#                 ###.#.#  ",
                    "  #...#..DI             BU....#..LF",
                    "  #####.#                 #.#####  ",
                    "YN......#               VT..#....QG",
                    "  #.###.#                 #.###.#  ",
                    "  #.#...#                 #.....#  ",
                    "  ###.###    J L     J    #.#.###  ",
                    "  #.....#    O F     P    #.#...#  ",
                    "  #.###.#####.#.#####.#####.###.#  ",
                    "  #...#.#.#...#.....#.....#.#...#  ",
                    "  #.#####.###.###.#.#.#########.#  ",
                    "  #...#.#.....#...#.#.#.#.....#.#  ",
                    "  #.###.#####.###.###.#.#.#######  ",
                    "  #.#.........#...#.............#  ",
                    "  #########.###.###.#############  ",
                    "           B   J   C               ",
                    "           U   P   P               ",
                ],
                58,
            ),
        ];

        for case in cases {
            assert_eq!(part1(&case.0.join("\n")), case.1);
        }
    }

    #[test]
    fn test_part2() {
        assert_eq!(part2(&""), 0);
    }
}
